version: '3.3'
services:

  db:
    image: postgres:12.0
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    env_file:
      - .env
#    ports:
#      - ${POSTGRES_PORT:-5432}:5432

  backend: # web
    build:
      context: ../backend
      dockerfile: Dockerfile
#    image: sarvilin/foodgram_backend:latest
    restart: always
    volumes:
      - static_value:/app/static/
      - media_value:/app/media/
    depends_on:
      - db
#    ports:
#      - 8001:8000
    env_file:
      - .env

  frontend:
#    image: sarvilin/foodgram_frontend:latest
    build:
      context: ../frontend
      dockerfile: Dockerfile
    volumes:
      - ../frontend/:/app/result_build/
#    depends_on:
#      - backend

  nginx:
    image: nginx:1.19.3
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
      - ../frontend/build:/usr/share/nginx/html/
      - ../docs/:/usr/share/nginx/html/api/docs/
      - ../docs/redoc.html:/usr/share/nginx/html/api/docs/redoc.html
      - ../docs/openapi-schema.yml:/usr/share/nginx/html/api/docs/openapi-schema.yml
      - static_value:/var/html/static/
      - media_value:/var/html/media/
#    depends_on:
#      - backend
#      - frontend

volumes:
  postgres_data:
  static_value:
  media_value:
